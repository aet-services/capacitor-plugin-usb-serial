{
  "api": {
    "name": "UsbSerialPlugin",
    "slug": "usbserialplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "listDevices",
        "signature": "() => Promise<{ devices: UsbDeviceInfo[]; }>",
        "parameters": [],
        "returns": "Promise<{ devices: UsbDeviceInfo[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "UsbDeviceInfo"
        ],
        "slug": "listdevices"
      },
      {
        "name": "openSerial",
        "signature": "(options: UsbSerialOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "UsbSerialOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "UsbSerialOptions"
        ],
        "slug": "openserial"
      },
      {
        "name": "closeSerial",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "closeserial"
      },
      {
        "name": "writeSerial",
        "signature": "(options: { data: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ data: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "writeserial"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'attached' | 'detached', listenerFunc: (data: { device: UsbDeviceInfo; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'attached' | 'detached'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { device: UsbDeviceInfo; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle",
          "UsbDeviceInfo"
        ],
        "slug": "addlistenerattached--detached-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'connected' | 'disconnected', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'connected' | 'disconnected'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerconnected--disconnected-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'data', listenerFunc: (data: { data: string; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'data'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { data: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerdata-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'log', listenerFunc: (data: { text: string; tag: string; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'log'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { text: string; tag: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerlog-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'error', listenerFunc: (data: { error: string | UsbSerialErrorMsg; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'error'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { error: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle",
          "UsbSerialErrorMsg"
        ],
        "slug": "addlistenererror-"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "UsbDeviceInfo",
      "slug": "usbdeviceinfo",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "deviceName",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "vendorId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "productId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "deviceId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "serialNumber",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | null"
        }
      ]
    },
    {
      "name": "UsbSerialOptions",
      "slug": "usbserialoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "vendorId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "productId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "portNum",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "baudRate",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "dataBits",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "stopBits",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "parity",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "dtr",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "rts",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "UsbSerialErrorMsg",
      "slug": "usbserialerrormsg",
      "members": [
        {
          "name": "ConnectionFailedDeviceNotFound",
          "value": "'connectionFailed:DeviceNotFound'",
          "tags": [],
          "docs": "Connection failed because the device was not found."
        },
        {
          "name": "ConnectionFailedNoDriverForDevice",
          "value": "'connectionFailed:NoDriverForDevice'",
          "tags": [],
          "docs": "Connection failed because no driver was found for the device."
        },
        {
          "name": "ConnectionFailedNoAvailablePorts",
          "value": "'connectionFailed:NoAvailablePorts'",
          "tags": [],
          "docs": "Connection failed because no available ports were found."
        },
        {
          "name": "ConnectionFailedUsbConnectionPermissionDenied",
          "value": "'connectionFailed:UsbConnectionPermissionDenied'",
          "tags": [],
          "docs": "Connection failed because USB connection permission was denied."
        },
        {
          "name": "ConnectionFailedSerialOpenFailed",
          "value": "'connectionFailed:SerialOpenFailed'",
          "tags": [],
          "docs": "Connection failed because serial open operation failed."
        },
        {
          "name": "WriteFailedDeviceNotConnected",
          "value": "'writeFailed:DeviceNotConnected'",
          "tags": [],
          "docs": "Write operation failed because the device is not connected."
        },
        {
          "name": "WriteFailedEmptyData",
          "value": "'writeFailed:EmptyData'",
          "tags": [],
          "docs": "Write operation failed because the data was empty."
        },
        {
          "name": "WriteFailedConnectionLost",
          "value": "'writeFailed:ConnectionLost'",
          "tags": [],
          "docs": "Write operation failed because the connection was lost."
        },
        {
          "name": "ListFailedCannotListDevices",
          "value": "'listFailed:CannotListDevices'",
          "tags": [],
          "docs": "Listing devices failed because devices cannot be listed."
        }
      ]
    }
  ],
  "typeAliases": [],
  "pluginConfigs": []
}